// Generated by CoffeeScript 1.9.1
var Video,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Video = (function() {
  Video.prototype.sourceUrl = "";

  Video.prototype.activeUrl = "";

  Video.prototype.videoID = "";

  Video.prototype.vendor = "";

  function Video(selector) {
    this._activateVideo = bind(this._activateVideo, this);
    this.loadVideo = bind(this.loadVideo, this);
    this.playerParent = $(selector);
    this.player = $("<iframe frameborder=\"0\"></iframe>").appendTo(this.playerParent);
    this.player.attr("id", _.uniqueId("player_"));
  }

  Video.prototype.loadVideo = function(url) {
    var id, path;
    path = this._parseURL(url);
    if (path.host.match(/vimeo.com/) && (path.path != null)) {
      this.vendor = "vimeo";
      id = this.player.attr("id");
      url = "https://player.vimeo.com/video/" + path.path + "?api=1&player_id=" + id;
      return console.log(url);
    }
  };

  Video.prototype._activateVideo = function() {
    if (this.activeUrl) {
      return this.player.attr("src", this.activeUrl);
    }
  };

  Video.prototype._parseURL = function(url) {
    var dom;
    dom = document.createElement("a");
    dom.href = url;
    return {
      source: url,
      scheme: dom.protocol.substr(0, dom.protocol.indexOf(":")),
      host: dom.hostname,
      port: dom.port,
      path: dom.pathname.match(/\/?(.*)/)[1],
      query: dom.search.substr(dom.search.indexOf("?") + 1),
      hash: dom.hash.substr(dom.hash.indexOf("#"))
    };
  };

  return Video;

})();
